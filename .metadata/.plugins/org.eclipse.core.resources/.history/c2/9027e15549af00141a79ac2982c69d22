package umjdt.Events;

import java.util.Timer;
import java.util.TimerTask;

import umjdt.Events.TransactionBeginEvent.BeginTask;
import umjdt.concepts.Timestamp;
import umjdt.concepts.TransId;
import umjdt.concepts.Transaction;

public class TransactionBeginCommitEvent extends TransactionEvent{
	
	private Timer timer;
	private Timestamp beginCommitTime; 
	
	public TransactionBeginCommitEvent(Transaction _transaction)
	{
		super.setTransaction(_transaction);
		setBeginTime(getLocalTime());
		setTransactionId(_transaction.getId());
		super.setTransactionId(_transaction.getId());
		setTimeout(_transaction.getTimeout());
		super.setTimeout(_transaction.getTimeout());
		setState("BeginCommit");
		_transaction.setCurrentState(getState());
		super.setState("BeginCommit");
		
		setTimer(new Timer());
		timer.schedule(new BeginTask(), _transaction.getTimeout());
	}
	public Timer getTimer() {
		return timer;
	}
	public void setTimer(Timer timer) {
		this.timer = timer;
	}
	public Timestamp getBeginTime() {
		return beginTime;
	}

	public void setBeginTime(Timestamp beginTime) {
		this.beginTime = beginTime;
	}
	 class BeginTask extends TimerTask {
	    public void run() {
	      System.out.println("Time's up!");
	      //timer.cancel(); 
	      System.exit(0); //Stops everything 
	    }
	  }
}