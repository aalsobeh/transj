package umjdt.Events;

import java.util.Timer;
import java.util.TimerTask;

import umjdt.Events.TransactionBeginEvent.BeginTask;
import umjdt.concepts.Timestamp;
import umjdt.concepts.TransId;
import umjdt.concepts.Transaction;

public class TransactionBeginCommitEvent extends TransactionEvent{
	
	private Timer timer;
	private String state;
	private TransId transactionId;
	private int timeout;
	private Timestamp commitTime; 
	
	public TransactionCommitEvent(Transaction _transaction)
	{
		super.setTransaction(_transaction);
		setBeginTime(getLocalTime());
		transactionId = _transaction.getId();
		super.setTransId(transactionId);
		timeout = _transaction.getTimeout();
		super.setTimeout(timeout);
		setState("BeginCommit");
		_transaction.setCurrentState(getState());
		
		setTimer(new Timer());
		timer.schedule(new BeginTask(), timeout);
	}

	public Timer getTimer() {
		return timer;
	}

	public void setTimer(Timer timer) {
		this.timer = timer;
	}
	
	public String getState() {
		return state;
	}

	public void setState(String state) {
		this.state = state;
	}

	public TransId getTransactionId() {
		return transactionId;
	}

	public void setTransactionId(TransId transactionId) {
		this.transactionId = transactionId;
	}

	public Timestamp getBeginTime() {
		return beginTime;
	}

	public void setBeginTime(Timestamp beginTime) {
		this.beginTime = beginTime;
	}
	 class BeginTask extends TimerTask {
	    public void run() {
	      System.out.println("Time's up!");
	      //timer.cancel(); 
	      System.exit(0); //Stops everything 
	    }
	  }
}